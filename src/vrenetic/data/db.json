{
    "_default": {},
    "ann-models": {
        "1": {
            "id": "5cfe0db269e0ba0001bfb7df",
            "version": "0.0.1",
            "application": "vresh",
            "name": "Vresh Feed Item Relevancy Index for global population market",
            "description": "recommends items for sources for users from US region",
            "regions": [
                "US"
            ],
            "tags": [
                "population",
                "feed",
                "us"
            ],
            "status": "published",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/5cfe0db269e0ba0001bfb7df/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/5cfe0db269e0ba0001bfb7df/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "2": {
            "id": "5b9fa90171d4f00001bc863e",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Analog PassThrough ANN with always Positive 1.0 response",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/5b9fa90171d4f00001bc863e/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/5b9fa90171d4f00001bc863e/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "3": {
            "id": "5b21f94435a6a400013c6eca",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Analog PassThrough ANN with always Negative 0.0 response",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/5b21f94435a6a400013c6eca/python/expression.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/5b21f94435a6a400013c6eca/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "4": {
            "id": "9c21f99999a6a400013c6321",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Binary logical negation (NOT) as ANN with always inverted input value as output",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/9c21f99999a6a400013c6321/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/9c21f99999a6a400013c6321/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "5": {
            "id": "0021f99999a6a400013c0000",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Binary logical conjunction (AND) as ANN with two inputs and single output",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/0021f99999a6a400013c0000/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/0021f99999a6a400013c0000/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "6": {
            "id": "bc21f99999a6a400013c6666",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Binary logical disjunction (OR) as ANN with two inputs and single output",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/bc21f99999a6a400013c6666/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/bc21f99999a6a400013c6666/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "7": {
            "id": "acacf99999a6a400013c4321",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Binary logical exclusive disjunction (XOR) as ANN with two inputs and single output",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/acacf99999a6a400013c4321/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/acacf99999a6a400013c4321/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "8": {
            "id": "tensf99999a6a400013cflow",
            "application": "vresh",
            "version": "0.0.1",
            "name": "TensorFlow - Experimental multi-input and multi-output neural network",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/tensf99999a6a400013cflow/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/tensf99999a6a400013cflow/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "9": {
            "id": "pyacf99999a6a400013torch",
            "application": "vresh",
            "version": "0.0.1",
            "name": "PyTorch - Experimental multi-input and multi-output neural network",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/pyacf99999a6a400013torch/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/pyacf99999a6a400013torch/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        }
    },
    "workflow-models": {
        "1": {
            "id": "604f08de52ad6365011c4aa7",
            "version": "0.0.1",
            "name": "Serial passthrough via 2 dummy ANNs",
            "type": "workflow-default",
            "contract": "./dtos/v1.0.0.json",
            "topology": {
                "layers": [
                    {
                        "layer": "0",
                        "ann": [
                            "5b21f94435a6a400013c6eca"
                        ],
                        "wiring": null,
                        "output": null
                    },
                    {
                        "layer": "1",
                        "ann": [
                            "5b9fa90171d4f00001bc863e"
                        ],
                        "wiring": [
                            "5b21f94435a6a400013c6eca::relevancy_index---5b9fa90171d4f00001bc863e::relevancy_index"
                        ],
                        "output": [
                            "5b9fa90171d4f00001bc863e::relevancy_index---relevancy_index",
                            "5b9fa90171d4f00001bc863e::relevancy_index---distribution_policy"
                        ]
                    }
                ]
            }
        },
        "2": {
            "id": "704f08de52ad6365011c4abc",
            "version": "0.0.1",
            "name": "Serial Inverters with 3 layers (NOT::NOT::NOT)",
            "type": "workflow-default",
            "contract": "./dtos/v1.0.0.json",
            "topology": {
                "layers": [
                    {
                        "layer": "0",
                        "ann": [
                            "9c21f99999a6a400013c6321"
                        ],
                        "wiring": null,
                        "output": null
                    },
                    {
                        "layer": "1",
                        "ann": [
                            "9c21f99999a6a400013c6321"
                        ],
                        "wiring": [
                            "9c21f99999a6a400013c6321::output---9c21f99999a6a400013c6321::input"
                        ],
                        "output": null
                    },
                    {
                        "layer": "2",
                        "ann": [
                            "9c21f99999a6a400013c6321"
                        ],
                        "wiring": [
                            "9c21f99999a6a400013c6321::output---9c21f99999a6a400013c6321::input"
                        ],
                        "output": [
                            "9c21f99999a6a400013c6321::output"
                        ]
                    }
                ]
            }
        },
        "3": {
            "id": "111108de52ad6365011caabb",
            "version": "0.0.1",
            "name": "Parallel topology with 1 layer (AND+OR+XOR)",
            "type": "workflow-default",
            "contract": "./dtos/v1.0.0.json",
            "topology": {
                "layers": [
                    {
                        "layer": "0",
                        "ann": [
                            "0021f99999a6a400013c0000",
                            "bc21f99999a6a400013c6666",
                            "acacf99999a6a400013c4321"
                        ],
                        "wiring": null,
                        "output": [
                            "0021f99999a6a400013c0000::output---AND",
                            "bc21f99999a6a400013c6666::output---OR",
                            "acacf99999a6a400013c4321::output---XOR"
                        ]
                    }
                ]
            }
        },
        "4": {
            "id": "885608de52ad636501mmaa9a",
            "version": "0.0.1",
            "name": "Mixed serial&parallel topology with 3 layers (AND+OR::OR+AND::XOR)",
            "type": "workflow-default",
            "contract": "./dtos/v1.0.0.json",
            "topology": {
                "layers": [
                    {
                        "layer": "0",
                        "ann": [
                            "0021f99999a6a400013c0000",
                            "bc21f99999a6a400013c6666"
                        ],
                        "wiring": null,
                        "output": null
                    },
                    {
                        "layer": "1",
                        "ann": [
                            "bc21f99999a6a400013c6666",
                            "0021f99999a6a400013c0000"
                        ],
                        "wiring": [
                            "0021f99999a6a400013c0000::output---bc21f99999a6a400013c6666::input0",
                            "0021f99999a6a400013c0000::output---bc21f99999a6a400013c6666::input1",
                            "bc21f99999a6a400013c6666::output---0021f99999a6a400013c0000::input0",
                            "bc21f99999a6a400013c6666::output---0021f99999a6a400013c0000::input1"
                        ],
                        "output": null
                    },
                    {
                        "layer": "2",
                        "ann": [
                            "acacf99999a6a400013c4321"
                        ],
                        "wiring": [
                            "bc21f99999a6a400013c6666::output---acacf99999a6a400013c4321::input0",
                            "0021f99999a6a400013c0000::output---acacf99999a6a400013c4321::input1"
                        ],
                        "output": [
                            "acacf99999a6a400013c4321::output"
                        ]
                    }
                ]
            }
        }
    }
}