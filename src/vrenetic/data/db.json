{
    "_default": {},
    "ann-models": {
        "1": {
            "id": "vresh-relevancy-feed",
            "version": "0.0.1",
            "application": "vresh",
            "name": "Vresh Feed Item Relevancy Index for global population market",
            "description": "recommends items for sources for users from US region",
            "regions": [
                "US"
            ],
            "tags": [
                "population",
                "feed",
                "us"
            ],
            "status": "published",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/vresh-relevancy-feed/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/vresh-relevancy-feed/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "2": {
            "id": "dummy-passthrough-positive",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Analog PassThrough ANN with always Positive 1.0 response",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/dummy-passthrough-positive/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/dummy-passthrough-positive/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "3": {
            "id": "dummy-passthrough-negative",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Analog PassThrough ANN with always Negative 0.0 response",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/dummy-passthrough-negative/python/expression.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/dummy-passthrough-negative/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "4": {
            "id": "dummy-binary-not",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Binary logical negation (NOT) as ANN with always inverted input value as output",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/dummy-binary-not/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/dummy-binary-not/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "5": {
            "id": "dummy-binary-and",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Binary logical conjunction (AND) as ANN with two inputs and single output",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/dummy-binary-and/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/dummy-binary-and/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "6": {
            "id": "dummy-binary-or",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Binary logical disjunction (OR) as ANN with two inputs and single output",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/dummy-binary-or/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/dummy-binary-or/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "7": {
            "id": "dummy-binary-xor",
            "application": "vresh",
            "version": "0.0.1",
            "name": "Binary logical exclusive disjunction (XOR) as ANN with two inputs and single output",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/dummy-binary-xor/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/dummy-binary-xor/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        },
        "8": {
            "id": "example-tensorflow-1",
            "application": "vresh",
            "version": "0.0.1",
            "name": "TensorFlow - Experimental multi-input and multi-output neural network",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/example-tensorflow-1/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/example-tensorflow-1/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": [
                {
                    "language": "python",
                    "model_path": "./assets/example-tensorflow-1/python/trainer.py",
                    "type": "compute",
                    "default": "true"
                }
            ]
        },
        "9": {
            "id": "example-pytorch-1",
            "application": "vresh",
            "version": "0.0.1",
            "name": "PyTorch - Experimental multi-input and multi-output neural network",
            "learning": "supervised",
            "type": "ann-default",
            "expressions": [
                {
                    "language": "python",
                    "path": "./assets/example-pytorch-1/python/expression.py",
                    "type": "compute",
                    "default": "true"
                }
            ],
            "mappers": [
                {
                    "path": "./assets/example-pytorch-1/python/mapper.py",
                    "contract": {
                        "version": "1.0.0",
                        "type": "dto",
                        "path": "./dtos/v1.0.0.json"
                    },
                    "language": "python",
                    "default": "true"
                }
            ],
            "trainners": null
        }
    },
    "workflow-models": {
        "1": {
            "id": "604f08de52ad6365011c4aa7",
            "version": "0.0.1",
            "name": "Serial passthrough via 2 dummy ANNs",
            "type": "workflow-default",
            "contract": "./dtos/v1.0.0.json",
            "topology": {
                "layers": [
                    {
                        "layer": "0",
                        "ann": [
                            "dummy-passthrough-negative"
                        ],
                        "wiring": null,
                        "output": null
                    },
                    {
                        "layer": "1",
                        "ann": [
                            "dummy-passthrough-positive"
                        ],
                        "wiring": [
                            "dummy-passthrough-negative::relevancy_index---dummy-passthrough-positive::relevancy_index"
                        ],
                        "output": [
                            "dummy-passthrough-positive::relevancy_index---relevancy_index",
                            "dummy-passthrough-positive::relevancy_index---distribution_policy"
                        ]
                    }
                ]
            }
        },
        "2": {
            "id": "704f08de52ad6365011c4abc",
            "version": "0.0.1",
            "name": "Serial Inverters with 3 layers (NOT::NOT::NOT)",
            "type": "workflow-default",
            "contract": "./dtos/v1.0.0.json",
            "topology": {
                "layers": [
                    {
                        "layer": "0",
                        "ann": [
                            "dummy-binary-not"
                        ],
                        "wiring": null,
                        "output": null
                    },
                    {
                        "layer": "1",
                        "ann": [
                            "dummy-binary-not"
                        ],
                        "wiring": [
                            "dummy-binary-not::output---dummy-binary-not::input"
                        ],
                        "output": null
                    },
                    {
                        "layer": "2",
                        "ann": [
                            "dummy-binary-not"
                        ],
                        "wiring": [
                            "dummy-binary-not::output---dummy-binary-not::input"
                        ],
                        "output": [
                            "dummy-binary-not::output"
                        ]
                    }
                ]
            }
        },
        "3": {
            "id": "111108de52ad6365011caabb",
            "version": "0.0.1",
            "name": "Parallel topology with 1 layer (AND+OR+XOR)",
            "type": "workflow-default",
            "contract": "./dtos/v1.0.0.json",
            "topology": {
                "layers": [
                    {
                        "layer": "0",
                        "ann": [
                            "dummy-binary-and",
                            "dummy-binary-or",
                            "dummy-binary-xor"
                        ],
                        "wiring": null,
                        "output": [
                            "dummy-binary-and::output---AND",
                            "dummy-binary-or::output---OR",
                            "dummy-binary-xor::output---XOR"
                        ]
                    }
                ]
            }
        },
        "4": {
            "id": "885608de52ad636501mmaa9a",
            "version": "0.0.1",
            "name": "Mixed serial&parallel topology with 3 layers (AND+OR::OR+AND::XOR)",
            "type": "workflow-default",
            "contract": "./dtos/v1.0.0.json",
            "topology": {
                "layers": [
                    {
                        "layer": "0",
                        "ann": [
                            "dummy-binary-and",
                            "dummy-binary-or"
                        ],
                        "wiring": null,
                        "output": null
                    },
                    {
                        "layer": "1",
                        "ann": [
                            "dummy-binary-or",
                            "dummy-binary-and"
                        ],
                        "wiring": [
                            "dummy-binary-and::output---dummy-binary-or::input0",
                            "dummy-binary-and::output---dummy-binary-or::input1",
                            "dummy-binary-or::output---dummy-binary-and::input0",
                            "dummy-binary-or::output---dummy-binary-and::input1"
                        ],
                        "output": null
                    },
                    {
                        "layer": "2",
                        "ann": [
                            "dummy-binary-xor"
                        ],
                        "wiring": [
                            "dummy-binary-or::output---dummy-binary-xor::input0",
                            "dummy-binary-and::output---dummy-binary-xor::input1"
                        ],
                        "output": [
                            "dummy-binary-xor::output"
                        ]
                    }
                ]
            }
        }
    }
}